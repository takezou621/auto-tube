version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    container_name: autotube-postgres
    environment:
      POSTGRES_DB: autotube
      POSTGRES_USER: autotube
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U autotube"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: autotube-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: autotube-app
    env_file:
      - .env
    ports:
      - "8000:8000"
    volumes:
      - ./src:/app/src
      - ./data:/app/data
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: uvicorn src.api.main:app --host 0.0.0.0 --port 8000 --reload

  celery-worker:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: autotube-celery-worker
    env_file:
      - .env
    volumes:
      - ./src:/app/src
      - ./data:/app/data
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: celery -A src.scheduler.celery_app worker --loglevel=info

  celery-beat:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: autotube-celery-beat
    env_file:
      - .env
    volumes:
      - ./src:/app/src
      - ./data:/app/data
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: celery -A src.scheduler.celery_app beat --loglevel=info

volumes:
  postgres_data:
  redis_data:
